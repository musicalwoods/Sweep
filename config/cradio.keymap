/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_rctl {
            timeout-ms = <30>;
            key-positions = <30 13>;
            bindings = <&sk RCTL>;
        };  
        combo_ralt {
            timeout-ms = <30>;
            key-positions = <30 12>;
            bindings = <&sk RALT>;
        };    
        combo_rgui {
            timeout-ms = <30>;
            key-positions = <30 11>;
            bindings = <&sk RGUI>;
		};    
        combo_sl2 {
            timeout-ms = <30>;
            key-positions = <30 10>;
            bindings = <&sl 2>;
		};	
        combo_sl2_2 {
            timeout-ms = <60>;
            key-positions = <30 33>;
            bindings = <&sl 2>;
		};	
		combo_L0 {
            timeout-ms = <50>;
            key-positions = <33 25>;
			layers = <1 2 3>;
            bindings = <&to 0>;
        };   
		combo_rL1 {
            timeout-ms = <30>;
            key-positions = <33 26>;
			layers = <0>;
            bindings = <&to 1>;
        };   
		combo_rL2 {
            timeout-ms = <30>;
            key-positions = <33 26>;
			layers = <1>;
            bindings = <&to 2>;
        };  
		combo_rL3 {
            timeout-ms = <30>;
            key-positions = <33 26>;
			layers = <2>;
            bindings = <&to 3>;
        };  
		combo_L1 {
            timeout-ms = <30>;
            key-positions = <23 30>;
			layers = <0>;
            bindings = <&to 1>;
        };    
		combo_L2 {
            timeout-ms = <30>;
            key-positions = <23 30>;
			layers = <1>;
            bindings = <&to 2>;
        };          
		combo_L3 {
            timeout-ms = <30>;
            key-positions = <23 30>;
			layers = <2>;
            bindings = <&to 3>;
        };          
        combo_kapp {
            timeout-ms = <30>;
            key-positions = <33 15>;
            bindings = <&kp K_APP>;
        };    
        combo_lctl {
            timeout-ms = <30>;
            key-positions = <33 16>;
            bindings = <&sk LCTL>;
        };       
        combo_lalt {
            timeout-ms = <30>;
            key-positions = <33 17>;
            bindings = <&sk LALT>;
        };       
        combo_lgui {
            timeout-ms = <30>;
            key-positions = <33 18>;
            bindings = <&sk LGUI>;
        };               

		

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       	default_layer {
		bindings = <
		&kp Y  &kp C  &kp L  &kp M   &kp K 			   &kp Z  &kp F  &kp U      &kp COMMA  &kp SQT 
		&kp I  &kp S  &kp R  &kp T   &kp G 			   &kp P  &kp N  &kp E      &kp A      &kp O
		&kp Q  &kp V  &kp W  &kp D   &kp J		   	   &kp B  &kp H  &kp SLASH  &kp DOT    &kp X
          				     &mo 1   &mt LSHIFT SPACE  &mt RSHIFT SPACE  &mo 1 
		>;
		};	 
  
       	left_layer {
		bindings = <
		&kp LS(TAB)  &kp HOME     &kp UP    &kp END        &kp DEL			&kp EQUAL  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp DEL
		&kp TAB      &kp LEFT     &kp DOWN  &kp RIGHT      &kp BSPC			&kp MINUS  &kp NUM_4  &kp NUM_5  &kp NUM_6  &kp BSPC 
		&kp ESC      &kp LC(LEFT) &kp C_PP  &kp LC(RIGHT)  &kp RET    		&kp NUM_0  &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp RET 
					                        &to 0          &trans  			&trans     &to 0
		>;
		};
		
		right_layer {
		bindings = <
		&kp EXCL    &kp AT       &kp HASH  &kp DLLR     &kp PRCNT      	&kp CARET  &kp AMPS  &kp STAR  &kp SEMI  &kp COLON 
		&kp GRAVE   &kp SEMI     &kp PG_DN &kp PG_UP    &kp BSLH  	    &kp LPAR   &kp RPAR  &kp LBRC  &kp RBRC  &kp BSPC
		&kp C_MUTE  &kp C_VOL_DN &kp C_PP  &kp C_VOL_UP &sl 3           &kp LT     &kp GT    &kp LBKT  &kp RBKT  &kp RET
					                       &to 0        &trans  	   	&trans     &to 0 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp F1      &kp F2      &kp F3      &kp F4     &kp DEL          &bt BT_CLR  &out OUT_USB &out OUT_BLE &kp INS      &kp DEL
		&kp F5      &kp F6      &kp F7      &kp F8     &kp BSPC         &bt BT_NXT  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp BSPC
		&kp F9      &kp F10     &kp F11     &kp F12    &kp RET          &bt BT_PRV  &kp PSCRN    &kp PAUSE_BREAK &kp SLCK  &kp RET   
					                        &to 0      &trans  			&trans      &to 0
		>;
		};	
        
	};
};